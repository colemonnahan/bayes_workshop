load("/Users/noble/Desktop/WORK/ALTERED PROJECTS/UW/559 Class 2016/Day2 30Nov2016/D2 Lab/Example2/logistic.rdata")
#Data from day 3 ADMB Workshop#
xvar<-  seq(15, 90, by = 5)#
yvar<-c(0.068439419,	0.164199403,	0.232013462, 	0.326962468, 	0.467521441, 	0.519546,	0.690518403, 	0.700221588, 	0.78814488, 	0.870514161	, 0.901616978,	0.956781475,	0.978146624, 	0.978833236, 	0.986076667,  0.992121955)
#Observation process - binomial trials:#
set.seed(1220)#
M<- 100#
N<- length(yvar)#
Y<- rbinom(n = N, size = M, prob = yvar)
#plot the data#
plot(xvar, yvar, pch = 15, xlab = "X", ylab = "Proportion", type = 'l', lwd = 3)#
points(xvar, Y/M, pch = 15)
#Uniform(-100, 100)#
par(mfrow = c(1,2))#
the.u<- runif(1000, -100, 100)#
hist(the.u, prob = T, main = "Uniform Prior", xlab = "Prior value" )  #
hist(plogis(the.u), main = "Transformed Prior", prob = T, xlab = "Prior value")
par(mfrow = c(1,1))#
the.x<- seq(-10, 10, by = 0.5)#
plot(the.x, plogis(the.x), type = 'l', xlab = "Value", ylab = "Transformed Value", lwd = 3)
#N(0, 2.5)#
par(mfrow = c(1,2))#
the.n<- rnorm(1000, 0, sqrt(2.5))#
hist(the.n, prob = T, main = "Uniform Prior", xlab = "Prior value" )  #
hist(plogis(the.n), main = "Transformed Prior", prob = T, xlab = "Prior value")
#Run the JAGS model:#
library(rjags)#
#construct lists and functions for constructing JAGS model#
x<- xvar - mean(xvar)#
dat<- list("N" = N, "y" = Y, "x" = x, "M"=M)#
jags.inits <- function() {list (alpha = rnorm(1), beta = rnorm(1))} #
param<- c("alpha", "beta")
#initial JAGS model call with adapt #
logit.jags<-jags.model(file="logistic.bug", data=dat, inits=jags.inits, n.chains=3, n.adapt=1000)#
#
#return samplers being used for each Gibbs step#
list.samplers(logit.jags)  #
#
#last coefficient values#
coef(logit.jags)
#Run the JAGS model:#
library(rjags)#
#construct lists and functions for constructing JAGS model#
x<- xvar - mean(xvar)#
dat<- list("N" = N, "y" = Y, "x" = x, "M"=M)#
jags.inits <- function() {list (alpha = rnorm(1), beta = rnorm(1))} #
param<- c("alpha", "beta")
#initial JAGS model call with adapt #
logit.jags<-jags.model(file="logistic.bug", data=dat, inits=jags.inits, n.chains=3, n.adapt=1000)
Y
dat
jags.inits <- function() {list (alpha = rnorm(1, -2, 2), beta = rnorm(1, -2, 2))} #
param<- c("alpha", "beta")
#initial JAGS model call with adapt #
logit.jags<-jags.model(file="logistic.bug", data=dat, inits=jags.inits, n.chains=3, n.adapt=1000)
M
#construct lists and functions for constructing JAGS model#
jags.inits1a <- function() {list (alpha = rnorm(1), beta = rnorm(1), tau = runif(1), Z = rnorm(N) )}#
param1a<- c("alpha", "beta", "tau")#
#
#initial JAGS model call with adapt #
logit1a.jags<-jags.model(file="logistic1a.bug", data=dat, inits=jags.inits1a, n.chains=3, n.adapt=1000)
#Data from day 3 ADMB Workshop#
xvar<-  seq(15, 90, by = 5)#
yvar<-c(0.068439419,	0.164199403,	0.232013462, 	0.326962468, 	0.467521441, 	0.519546,	0.690518403, 	0.700221588, 	0.78814488, 	0.870514161	, 0.901616978,	0.956781475,	0.978146624, 	0.978833236, 	0.986076667,  0.992121955)#
#
#Observation process - binomial trials:#
set.seed(1220)#
M<- 100#
N<- length(yvar)#
Y<- rbinom(n = N, size = M, prob = yvar)
#Run the JAGS model:#
library(rjags)#
#construct lists and functions for constructing JAGS model#
x<- xvar - mean(xvar)#
dat<- list("N" = N, "y" = Y, "x" = x, "M"=M)#
jags.inits <- function() {list (alpha = rnorm(1, -2, 2), beta = rnorm(1, -2, 2))} #
param<- c("alpha", "beta")#
#
#initial JAGS model call with adapt #
logit.jags<-jags.model(file="logistic.bug", data=dat, inits=jags.inits, n.chains=3, n.adapt=1000)
#Run the JAGS model:#
library(rjags)#
#construct lists and functions for constructing JAGS model#
x<- xvar - mean(xvar)#
dat<- list("N" = N, "y" = Y, "x" = x, "M"=M)#
jags.inits <- function() {list (alpha = rnorm(1), beta = rnorm(1))} #
param<- c("alpha", "beta")
#initial JAGS model call with adapt #
logit.jags<-jags.model(file="logistic.bug", data=dat, inits=jags.inits, n.chains=3, n.adapt=1000)
M
Y
x<- (xvar - mean(xvar) )/sd(xvar)#
dat<- list("N" = N, "y" = Y, "x" = x, "M"=M)#
jags.inits <- function() {list (alpha = rnorm(1), beta = rnorm(1))} #
param<- c("alpha", "beta")#
#
#initial JAGS model call with adapt #
logit.jags<-jags.model(file="logistic.bug", data=dat, inits=jags.inits, n.chains=3, n.adapt=1000)
#return samplers being used for each Gibbs step#
list.samplers(logit.jags)
#last coefficient values#
coef(logit.jags)
# burn in#
update(logit.jags, n.iter=1000) #
coef(logit.jags)#
#update model to draw from posteriors#
logit.sim<-coda.samples(logit.jags, variable.names=param, n.iter=10000, thin = 5)
plot(logit.sim)
gelman.diag(logit.sim)
gelman.plot(logit.sim)
load("/Users/noble/Desktop/WORK/ALTERED PROJECTS/UW/559 Class 2016/Day2 30Nov2016/D2 Lab/Example2/logistic.rdata")
load("/Users/noble/Documents/Classes/Hendrix/FSH 559 Numerical Computing 2018/Day2 28Nov2018/D2 Lab/Example2/logistic.rdata")
xvar<-  seq(15, 90, by = 5)#
yvar<-c(0.068439419,	0.164199403,	0.232013462, 	0.326962468, 	0.467521441, 	0.519546,	0.690518403, 	0.700221588, 	0.78814488, 	0.870514161	, 0.901616978,	0.956781475,	0.978146624, 	0.978833236, 	0.986076667,  0.992121955)
#Observation process - binomial trials:#
set.seed(1220)#
M<- 100#
N<- length(yvar)#
Y<- rbinom(n = N, size = M, prob = yvar)#
#
#plot the data#
plot(xvar, yvar, pch = 15, xlab = "X", ylab = "Proportion", type = 'l', lwd = 3)#
points(xvar, Y/M, pch = 15)
######
#Evaluation of priors for logistic regression#
######
#
#evaluation of priors for logistic regression - comparison of uniform on transformed and untransformed space#
#
#Uniform(-100, 100)#
par(mfrow = c(1,2))#
the.u<- runif(1000, -100, 100)#
hist(the.u, prob = T, main = "Uniform Prior", xlab = "Prior value" )  #
hist(plogis(the.u), main = "Transformed Prior", prob = T, xlab = "Prior value")#
#
par(mfrow = c(1,1))#
the.x<- seq(-10, 10, by = 0.5)#
plot(the.x, plogis(the.x), type = 'l', xlab = "Value", ylab = "Transformed Value", lwd = 3)
#Uniform(-100, 100)#
par(mfrow = c(1,2))#
the.u<- runif(1000, -100, 100)#
hist(the.u, prob = T, main = "Uniform Prior", xlab = "Prior value" )  #
hist(plogis(the.u), main = "Transformed Prior", prob = T, xlab = "Prior value")
#Run the JAGS model:#
library(rjags)#
#construct lists and functions for constructing JAGS model#
#NEED TO MODIFY THE FOLLOWING LINE TO INCLUDE SD(XVAR)#
x<- (xvar - mean(xvar) )/sd(xvar)#
dat<- list("N" = N, "y" = Y, "x" = x, "M"=M)#
jags.inits <- function() {list (alpha = rnorm(1), beta = rnorm(1))} #
param<- c("alpha", "beta")
#Data #
xvar<-  seq(15, 90, by = 5)#
yvar<-c(0.068439419,	0.164199403,	0.232013462, 	0.326962468, 	0.467521441, 	0.519546,	0.690518403, 	0.700221588, 	0.78814488, 	0.870514161	, 0.901616978,	0.956781475,	0.978146624, 	0.978833236, 	0.986076667,  0.992121955)#
#
#Observation process - binomial trials:#
set.seed(1220)#
M<- 100#
N<- length(yvar)#
Y<- rbinom(n = N, size = M, prob = yvar)
#plot the data#
plot(xvar, yvar, pch = 15, xlab = "X", ylab = "Proportion", type = 'l', lwd = 3)#
points(xvar, Y/M, pch = 15)
par(mfrow = c(1,1))
#plot the data#
plot(xvar, yvar, pch = 15, xlab = "X", ylab = "Proportion", type = 'l', lwd = 3)#
points(xvar, Y/M, pch = 15)
#Uniform(-100, 100)#
par(mfrow = c(1,2))#
the.u<- runif(1000, -100, 100)#
hist(the.u, prob = T, main = "Uniform Prior", xlab = "Prior value" )  #
hist(plogis(the.u), main = "Transformed Prior", prob = T, xlab = "Prior value")
par(mfrow = c(1,1))#
the.x<- seq(-10, 10, by = 0.5)#
plot(the.x, plogis(the.x), type = 'l', xlab = "Value", ylab = "Transformed Value", lwd = 3)
#N(0, 2.5)#
par(mfrow = c(1,2))#
the.n<- rnorm(1000, 0, sqrt(2.5))#
hist(the.n, prob = T, main = "Uniform Prior", xlab = "Prior value" )  #
hist(plogis(the.n), main = "Transformed Prior", prob = T, xlab = "Prior value")
#Run the JAGS model:#
library(rjags)#
#construct lists and functions for constructing JAGS model#
x<- (xvar - mean(xvar) )/sd(xvar)#
dat<- list("N" = N, "y" = Y, "x" = x, "M"=M)#
jags.inits <- function() {list (alpha = rnorm(1), beta = rnorm(1))} #
param<- c("alpha", "beta")#
#
#initial JAGS model call with adapt #
logit.jags<-jags.model(file="logistic.bug", data=dat, inits=jags.inits, n.chains=3, n.adapt=1000)
#return samplers being used for each Gibbs step#
list.samplers(logit.jags)
#last coefficient values#
coef(logit.jags)
# burn in#
update(logit.jags, n.iter=1000) #
coef(logit.jags)#
#update model to draw from posteriors#
logit.sim<-coda.samples(logit.jags, variable.names=param, n.iter=10000, thin = 5)
plot(logit.sim)#
gelman.diag(logit.sim)#
gelman.plot(logit.sim)
#A typical prior of Gamma(0.001, 0.001)#
inv.var<- rgamma(1000, rate = 0.001, shape = 0.001)#
rv<- plogis(rnorm(1000, sd = sqrt(1/inv.var) ) ) #
par(mfrow = c(1,2))#
#hist(1/inv.var, prob = T, main = "Uniform Prior", xlab = "Prior value" )  #
hist(rv, main = "Gamma(0.001, 0.001)", prob = T, xlab = "Prior value")
#use a Gamma(4,3)#
inv.var<- rgamma(1000, rate = 4, shape = 3)#
rv<- plogis(rnorm(1000, mean = 0, sd = sqrt(1/inv.var)))#
#hist(1/inv.var, prob = T, main = "Uniform Prior", xlab = "Prior value" )  #
hist(rv, main = "Gamma(4,3)", prob = T, xlab = "Prior value")
#construct lists and functions for constructing JAGS model#
jags.inits1a <- function() {list (alpha = rnorm(1), beta = rnorm(1), tau = runif(1), Z = rnorm(N) )}#
param1a<- c("alpha", "beta", "tau")
#initial JAGS model call with adapt #
logit1a.jags<-jags.model(file="logistic1a.bug", data=dat, inits=jags.inits1a, n.chains=3, n.adapt=1000)#
#
#return samplers being used for each Gibbs step#
list.samplers(logit1a.jags)
#last coefficient values#
coef(logit1a.jags)
# burn in#
update(logit1a.jags, n.iter=1000) #
coef(logit1a.jags)
#update model to draw from posteriors#
logit1a.sim<-coda.samples(logit1a.jags, variable.names=param1a, n.iter=20000)#
#
gelman.diag(logit1a.sim)#
gelman.plot(logit1a.sim)
load("/Users/noble/Documents/Classes/Hendrix/FSH 559 Numerical Computing 2018/Day2 28Nov2018/D2 Lab/Example2/logistic.rdata")
load("/Users/noble/Documents/Classes/Hendrix/FSH 559 Numerical Computing 2018/Day2 28Nov2018/D2 Lab/Example2/logistic.rdata")
